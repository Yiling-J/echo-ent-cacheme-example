// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/mattn/echo-ent-example/ent/comment"
	"github.com/mattn/echo-ent-example/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescName is the schema descriptor for name field.
	commentDescName := commentFields[0].Descriptor()
	// comment.DefaultName holds the default value on creation for the name field.
	comment.DefaultName = commentDescName.Default.(string)
	// comment.NameValidator is a validator for the "name" field. It is called by the builders before save.
	comment.NameValidator = commentDescName.Validators[0].(func(string) error)
	// commentDescText is the schema descriptor for text field.
	commentDescText := commentFields[1].Descriptor()
	// comment.DefaultText holds the default value on creation for the text field.
	comment.DefaultText = commentDescText.Default.(string)
	// comment.TextValidator is a validator for the "text" field. It is called by the builders before save.
	comment.TextValidator = func() func(string) error {
		validators := commentDescText.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(text string) error {
			for _, fn := range fns {
				if err := fn(text); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// commentDescCreated is the schema descriptor for created field.
	commentDescCreated := commentFields[2].Descriptor()
	// comment.DefaultCreated holds the default value on creation for the created field.
	comment.DefaultCreated = commentDescCreated.Default.(func() time.Time)
	// commentDescUpdated is the schema descriptor for updated field.
	commentDescUpdated := commentFields[3].Descriptor()
	// comment.DefaultUpdated holds the default value on creation for the updated field.
	comment.DefaultUpdated = commentDescUpdated.Default.(func() time.Time)
	// comment.UpdateDefaultUpdated holds the default value on update for the updated field.
	comment.UpdateDefaultUpdated = commentDescUpdated.UpdateDefault.(func() time.Time)
}
