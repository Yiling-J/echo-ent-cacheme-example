// Code generated by cacheme, DO NOT EDIT.
package store

import (
	cacheme "github.com/Yiling-J/cacheme-go"

	"github.com/mattn/echo-ent-example/cacheme/schema"

	"strconv"
)

const (
	Hit   = "HIT"
	Miss  = "MISS"
	Fetch = "FETCH"
)

// Client is the cacheme client for all stores.
type Client struct {
	CommentCacheStore *CommentCache

	CommentListIDSCacheStore *CommentListIDSCache

	redis   cacheme.RedisClient
	cluster bool
	logger  cacheme.Logger
}

// Redis return the current redis client.
func (c *Client) Redis() cacheme.RedisClient {
	return c.redis
}

// SetLogger set logger interface for current client.
func (c *Client) SetLogger(l cacheme.Logger) {
	c.logger = l
}

// NewPipeline returns a new cacheme pipeline.
func (c *Client) NewPipeline() *cacheme.CachePipeline {
	return cacheme.NewPipeline(c.redis)
}

var CommentCacheStore = &CommentCache{tag: "Comment", singleflight: true, metadata: false}

var CommentListIDSCacheStore = &CommentListIDSCache{tag: "CommentListIDS", singleflight: true, metadata: false}

func init() {

	CommentCacheStore.versionString = strconv.Itoa(schema.Stores[0].Version.(int))

	CommentListIDSCacheStore.versionString = strconv.Itoa(schema.Stores[1].Version.(int))

}

// New create a new cacheme client with given redis client.
func New(redis cacheme.RedisClient) *Client {
	client := &Client{redis: redis}

	client.CommentCacheStore = CommentCacheStore.clone(client.redis)
	client.CommentCacheStore.setClient(client)

	client.CommentListIDSCacheStore = CommentListIDSCacheStore.clone(client.redis)
	client.CommentListIDSCacheStore.setClient(client)

	client.logger = &cacheme.NOPLogger{}
	return client
}

// NewCluster create a new cacheme cluster client with given redis client.
func NewCluster(redis cacheme.RedisClient) *Client {
	client := &Client{redis: redis, cluster: true}

	client.CommentCacheStore = CommentCacheStore.clone(client.redis)
	client.CommentCacheStore.setClient(client)

	client.CommentListIDSCacheStore = CommentListIDSCacheStore.clone(client.redis)
	client.CommentListIDSCacheStore.setClient(client)

	client.logger = &cacheme.NOPLogger{}
	return client
}
